// <auto-generated />
using System;
using CloudTicTacToe.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CloudTicTacToe.Infrastructure.Migrations
{
    [DbContext(typeof(TicTacToeContext))]
    [Migration("20231203163911_AddPointsColumnToPlayerTable")]
    partial class AddPointsColumnToPlayerTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CloudTicTacToe.Domain.Models.Cell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("integer");

                    b.Property<int>("FieldState")
                        .HasColumnType("integer");

                    b.Property<Guid>("GameBoardId")
                        .HasColumnType("uuid");

                    b.Property<int>("RowNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameBoardId");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("CloudTicTacToe.Domain.Models.GameBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlayerOId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerXId")
                        .HasColumnType("uuid");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerOId");

                    b.HasIndex("PlayerXId");

                    b.ToTable("GameBoards");
                });

            modelBuilder.Entity("CloudTicTacToe.Domain.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsComputer")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CloudTicTacToe.Domain.Models.Cell", b =>
                {
                    b.HasOne("CloudTicTacToe.Domain.Models.GameBoard", "GameBoard")
                        .WithMany("Cells")
                        .HasForeignKey("GameBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameBoard");
                });

            modelBuilder.Entity("CloudTicTacToe.Domain.Models.GameBoard", b =>
                {
                    b.HasOne("CloudTicTacToe.Domain.Models.Player", "PlayerO")
                        .WithMany()
                        .HasForeignKey("PlayerOId");

                    b.HasOne("CloudTicTacToe.Domain.Models.Player", "PlayerX")
                        .WithMany()
                        .HasForeignKey("PlayerXId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerO");

                    b.Navigation("PlayerX");
                });

            modelBuilder.Entity("CloudTicTacToe.Domain.Models.GameBoard", b =>
                {
                    b.Navigation("Cells");
                });
#pragma warning restore 612, 618
        }
    }
}
